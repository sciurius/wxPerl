#############################################################################
## Name:        ext/richtext/XS/RichTextStyle.xsp
## Purpose:     XS++ for Wx::RichText*Style*
## Author:      Mattia Barbon
## Modified by:
## Created:     12/11/2006
## RCS-ID:      $Id$
## Copyright:   (c) 2006, 2008-2009 Mattia Barbon
## Licence:     This program is free software; you can redistribute it and/or
##              modify it under the same terms as Perl itself
#############################################################################

#include <wx/richtext/richtextstyles.h>

%module{Wx};

%name{Wx::RichTextStyleDefinition} class wxRichTextStyleDefinition
{
%{
static void
wxRichTextStyleDefinition::CLONE()
  CODE:
    wxPli_thread_sv_clone( aTHX_ CLASS, (wxPliCloneSV)wxPli_detach_object );
%}
    ## // thread OK
    ~wxRichTextStyleDefinition()
        %code%{  wxPli_thread_sv_unregister( aTHX_ wxPli_get_class( aTHX_ ST(0) ), THIS, ST(0) );
                 if( wxPli_object_is_deleteable( aTHX_ ST(0) ) )
                     delete THIS;
               %};

    void Copy( const wxRichTextStyleDefinition& def );
    bool Eq( const wxRichTextStyleDefinition& def ) const;
    void SetName( const wxString& name );
    const wxString& GetName() const;
    void SetDescription( const wxString& descr );
    const wxString& GetDescription() const;
    void SetBaseStyle( const wxString& name );
    const wxString& GetBaseStyle() const;
    void SetStyle( const wxRichTextAttr& style );
    const wxRichTextAttr& GetStyle() const;
    const wxTextAttr& GetStyleMergedWithBase( wxRichTextStyleSheet* sheet ) const;
};

%name{Wx::RichTextCharacterStyleDefinition} class wxRichTextCharacterStyleDefinition
{
    wxRichTextCharacterStyleDefinition( const wxString& name = wxEmptyString );
};

%name{Wx::RichTextParagraphStyleDefinition} class wxRichTextParagraphStyleDefinition
{
    wxRichTextParagraphStyleDefinition( const wxString& name = wxEmptyString );

    void Copy( const wxRichTextParagraphStyleDefinition& def );

    void SetNextStyle( const wxString& name );
    const wxString& GetNextStyle() const;
};

%name{Wx::RichTextListStyleDefinition} class wxRichTextListStyleDefinition
{
    wxRichTextListStyleDefinition( const wxString& name = wxEmptyString );

    void Copy( const wxRichTextListStyleDefinition& def );

    void SetLevelAttributes( int i, const wxRichTextAttr& attr );
    wxRichTextAttrDisown* GetLevelAttributes( int i ) const;

    void SetAttributes( int i, int leftIndent, int leftSubIndent,
                        int bulletStyle,
                        const wxString& bulletSymbol = wxEmptyString );
    int FindLevelForIndent( int indent ) const;
    wxRichTextAttr& CombineWithParagraphStyle
        ( int indent, const wxRichTextAttr& paraStyle );
    wxRichTextAttr& GetCombinedStyle( int indent );
    wxRichTextAttr& GetCombinedStyleForLevel( int level );
    int GetLevelCount() const;
    bool IsNumbered( int i ) const;
};

%name{Wx::RichTextStyleSheet} class wxRichTextStyleSheet
{
    wxRichTextStyleSheet();

%{
static void
wxRichTextStyleSheet::CLONE()
  CODE:
    wxPli_thread_sv_clone( aTHX_ CLASS, (wxPliCloneSV)wxPli_detach_object );
%}
    ## // thread OK
    ~wxRichTextStyleSheet()
        %code%{  wxPli_thread_sv_unregister( aTHX_ "Wx::RichTextStyleSheet", THIS, ST(0) );
                 if( wxPli_object_is_deleteable( aTHX_ ST(0) ) )
                     delete THIS;
               %};

    bool AddStyle( wxRichTextStyleDefinitionDisown* def );
    wxRichTextStyleDefinitionDisown* FindStyle( const wxString& name ) const;
    bool RemoveStyle( wxRichTextStyleDefinition* def,
                      bool deleteStyle = false );

    void Copy( const wxRichTextStyleSheet& sheet );

    bool AddCharacterStyle( wxRichTextCharacterStyleDefinitionDisown* def );
    bool AddParagraphStyle( wxRichTextParagraphStyleDefinitionDisown* def );
    bool AddListStyle( wxRichTextListStyleDefinitionDisown* def );

    bool RemoveCharacterStyle( wxRichTextStyleDefinition* def,
                               bool deleteStyle = false );
    bool RemoveParagraphStyle( wxRichTextStyleDefinition* def,
                               bool deleteStyle = false );
    bool RemoveListStyle( wxRichTextStyleDefinition* def,
                          bool deleteStyle = false );

    wxRichTextCharacterStyleDefinitionDisown* FindCharacterStyle
        ( const wxString& name, bool recurse = true ) const;
    wxRichTextParagraphStyleDefinitionDisown* FindParagraphStyle
        ( const wxString& name, bool recurse = true ) const;
    wxRichTextListStyleDefinitionDisown* FindListStyle( const wxString& name,
                                                  bool recurse = true) const;

    size_t GetCharacterStyleCount() const;
    size_t GetParagraphStyleCount() const;
    size_t GetListStyleCount() const;

    wxRichTextCharacterStyleDefinitionDisown* GetCharacterStyle( size_t n ) const;
    wxRichTextParagraphStyleDefinitionDisown* GetParagraphStyle( size_t n ) const;
    wxRichTextListStyleDefinitionDisown* GetListStyle( size_t n ) const;

    void DeleteStyles();
    bool InsertSheet( wxRichTextStyleSheet* before );
    bool AppendSheet( wxRichTextStyleSheet* after );

    void Unlink();
    wxRichTextStyleSheetDisown* GetNextSheet() const;
    void SetNextSheet( wxRichTextStyleSheet* sheet );

    wxRichTextStyleSheetDisown* GetPreviousSheet() const;
    void SetPreviousSheet( wxRichTextStyleSheet* sheet );
    void SetName( const wxString& name );
    const wxString& GetName() const;
    void SetDescription( const wxString& descr );
    const wxString& GetDescription() const;
};
